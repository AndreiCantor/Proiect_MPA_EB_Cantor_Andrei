@model EventIndexViewModel

@{
    ViewData["Title"] = "Index";
}

<h1>Events</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>

<form asp-action="Index" method="get">
    <div class="form-group">
        <input type="text" name="searchQuery" class="form-control" placeholder="Search by Event Name" value="@Model.SearchQuery" />
    </div>

    <div class="form-group">
        <label for="sortOrder">Sort By</label>
        <select name="sortOrder" class="form-control" asp-for="SortOrder" asp-items="@(new SelectList(Model.SortOrderList, "Value", "Text", Model.SortOrder))">
        </select>
    </div>

    <button type="submit" class="btn btn-primary mt-3" name="action" value="search">Search</button>
    <button type="submit" class="btn btn-secondary mt-3" name="action" value="filter">Apply Filters</button>
    <a asp-action="Index" class="btn btn-link mt-16">Back to Full List</a>
</form>

<table class="table">
    <thead>
        <tr>
            <th>@Html.DisplayNameFor(model => model.Events.First().Name)</th>
            <th>@Html.DisplayNameFor(model => model.Events.First().Description)</th>
            <th>@Html.DisplayNameFor(model => model.Events.First().Date)</th>
            <th>@Html.DisplayNameFor(model => model.Events.First().Capacity)</th>
            <th>@Html.DisplayNameFor(model => model.Events.First().AvailableSeats)</th>
            <th>@Html.DisplayNameFor(model => model.Events.First().Category)</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Events)
        {
            <tr>
                <td>@Html.DisplayFor(modelItem => item.Name)</td>
                <td>@Html.DisplayFor(modelItem => item.Description)</td>
                <td>@Html.DisplayFor(modelItem => item.Date)</td>
                <td>@Html.DisplayFor(modelItem => item.Capacity)</td>
                <td>@Html.DisplayFor(modelItem => item.AvailableSeats)</td>
                <td>@Html.DisplayFor(modelItem => item.Category.Name)</td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                    <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>

@if (Model.TotalPages > 1)
{
    <nav aria-label="Page navigation">
        <ul class="pagination">
            <!-- Previous Page Button -->
            <li class="page-item @(Model.CurrentPage == 1 ? "disabled" : "")">
                <a class="page-link" href="@Url.Action("Index", new { searchQuery = Model.SearchQuery, sortOrder = Model.SortOrder, pageNumber = Model.CurrentPage - 1, pageSize = Model.PageSize })" aria-label="Previous">
                    <span aria-hidden="true">&laquo;</span>
                </a>
            </li>

            <!-- Page Number Links -->
            @for (var i = 1; i <= Model.TotalPages; i++)
            {
                <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                    <a class="page-link" href="@Url.Action("Index", new { searchQuery = Model.SearchQuery, sortOrder = Model.SortOrder, pageNumber = i, pageSize = Model.PageSize })">@i</a>
                </li>
            }

            <!-- Next Page Button -->
            <li class="page-item @(Model.CurrentPage == Model.TotalPages ? "disabled" : "")">
                <a class="page-link" href="@Url.Action("Index", new { searchQuery = Model.SearchQuery, sortOrder = Model.SortOrder, pageNumber = Model.CurrentPage + 1, pageSize = Model.PageSize })" aria-label="Next">
                    <span aria-hidden="true">&raquo;</span>
                </a>
            </li>
        </ul>
    </nav>
}